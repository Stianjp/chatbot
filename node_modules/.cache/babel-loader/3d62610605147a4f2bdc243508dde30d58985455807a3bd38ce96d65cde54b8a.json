{"ast":null,"code":"// chatbotApi.js\n\nconst API_BASE_URL = \"http://localhost:5001/api\";\n\n// 1) T√∏mmer all data i backend\nexport const clearBackendData = async () => {\n  try {\n    await fetch(`${API_BASE_URL}/clearData`, {\n      method: \"POST\"\n    });\n  } catch (error) {\n    console.error(\"‚ùå Feil ved t√∏mming av data:\", error);\n  }\n};\n\n// 2) Lagrer brukerdata i backend (hvis samtykke)\nexport const saveUserData = async (consent, userData) => {\n  if (!consent) return;\n  try {\n    await fetch(`${API_BASE_URL}/saveData`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        consent,\n        data: userData\n      })\n    });\n  } catch (error) {\n    console.error(\"‚ùå Feil ved lagring av data:\", error);\n  }\n};\n\n// 3) Analyserer brukerdata for f√∏rste kategori\nexport const analyzeUserData = async userData => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/analyzeUser`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        jobStatus: userData.jobStatus,\n        goal: userData.goal\n      })\n    });\n    return await response.json(); // { category: \"a\" | \"b\" | ... }\n  } catch (error) {\n    console.error(\"‚ùå Feil ved analyse av brukerdata:\", error);\n    return {\n      category: null\n    };\n  }\n};\n\n// 4) üîπ NY funksjon: Re-analyserer brukerdata med en \"snippet\" fra samtalen\nexport const reanalyzeUserData = async ({\n  jobStatus,\n  goal,\n  conversationSnippet\n}) => {\n  try {\n    const response = await fetch(\"http://localhost:5001/api/reanalyzeUser\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        jobStatus,\n        goal,\n        conversationSnippet\n      })\n    });\n    if (!response.ok) {\n      throw new Error(\"Feil ved reanalysering\");\n    }\n    return await response.json(); // { newCategory: 'a' | 'b' | 'c' | 'd' | 'e' }\n  } catch (error) {\n    console.error(\"‚ùå Feil i reanalyzeUserData:\", error);\n    return {\n      newCategory: null\n    };\n  }\n};","map":{"version":3,"names":["API_BASE_URL","clearBackendData","fetch","method","error","console","saveUserData","consent","userData","headers","body","JSON","stringify","data","analyzeUserData","response","jobStatus","goal","json","category","reanalyzeUserData","conversationSnippet","ok","Error","newCategory"],"sources":["/Users/stianjohanpettersen/Library/CloudStorage/OneDrive-OsloMet/Dataingeni√∏r - bachelor/3.aÃäret/Bachelor/Bacheloroppgave/chatbot/src/api/chatbotApi.js"],"sourcesContent":["// chatbotApi.js\n\nconst API_BASE_URL = \"http://localhost:5001/api\";\n\n// 1) T√∏mmer all data i backend\nexport const clearBackendData = async () => {\n  try {\n    await fetch(`${API_BASE_URL}/clearData`, { method: \"POST\" });\n  } catch (error) {\n    console.error(\"‚ùå Feil ved t√∏mming av data:\", error);\n  }\n};\n\n// 2) Lagrer brukerdata i backend (hvis samtykke)\nexport const saveUserData = async (consent, userData) => {\n  if (!consent) return;\n  try {\n    await fetch(`${API_BASE_URL}/saveData`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ consent, data: userData }),\n    });\n  } catch (error) {\n    console.error(\"‚ùå Feil ved lagring av data:\", error);\n  }\n};\n\n// 3) Analyserer brukerdata for f√∏rste kategori\nexport const analyzeUserData = async (userData) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/analyzeUser`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        jobStatus: userData.jobStatus,\n        goal: userData.goal,\n      }),\n    });\n    return await response.json(); // { category: \"a\" | \"b\" | ... }\n  } catch (error) {\n    console.error(\"‚ùå Feil ved analyse av brukerdata:\", error);\n    return { category: null };\n  }\n};\n\n// 4) üîπ NY funksjon: Re-analyserer brukerdata med en \"snippet\" fra samtalen\nexport const reanalyzeUserData = async ({ jobStatus, goal, conversationSnippet }) => {\n  try {\n    const response = await fetch(\"http://localhost:5001/api/reanalyzeUser\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ jobStatus, goal, conversationSnippet }),\n    });\n    if (!response.ok) {\n      throw new Error(\"Feil ved reanalysering\");\n    }\n    return await response.json(); // { newCategory: 'a' | 'b' | 'c' | 'd' | 'e' }\n  } catch (error) {\n    console.error(\"‚ùå Feil i reanalyzeUserData:\", error);\n    return { newCategory: null };\n  }\n};\n"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAG,2BAA2B;;AAEhD;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF,MAAMC,KAAK,CAAC,GAAGF,YAAY,YAAY,EAAE;MAAEG,MAAM,EAAE;IAAO,CAAC,CAAC;EAC9D,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;EACrD;AACF,CAAC;;AAED;AACA,OAAO,MAAME,YAAY,GAAG,MAAAA,CAAOC,OAAO,EAAEC,QAAQ,KAAK;EACvD,IAAI,CAACD,OAAO,EAAE;EACd,IAAI;IACF,MAAML,KAAK,CAAC,GAAGF,YAAY,WAAW,EAAE;MACtCG,MAAM,EAAE,MAAM;MACdM,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEL,OAAO;QAAEM,IAAI,EAAEL;MAAS,CAAC;IAClD,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;EACrD;AACF,CAAC;;AAED;AACA,OAAO,MAAMU,eAAe,GAAG,MAAON,QAAQ,IAAK;EACjD,IAAI;IACF,MAAMO,QAAQ,GAAG,MAAMb,KAAK,CAAC,GAAGF,YAAY,cAAc,EAAE;MAC1DG,MAAM,EAAE,MAAM;MACdM,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBI,SAAS,EAAER,QAAQ,CAACQ,SAAS;QAC7BC,IAAI,EAAET,QAAQ,CAACS;MACjB,CAAC;IACH,CAAC,CAAC;IACF,OAAO,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOd,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,OAAO;MAAEe,QAAQ,EAAE;IAAK,CAAC;EAC3B;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAO;EAAEJ,SAAS;EAAEC,IAAI;EAAEI;AAAoB,CAAC,KAAK;EACnF,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMb,KAAK,CAAC,yCAAyC,EAAE;MACtEC,MAAM,EAAE,MAAM;MACdM,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEI,SAAS;QAAEC,IAAI;QAAEI;MAAoB,CAAC;IAC/D,CAAC,CAAC;IACF,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IACA,OAAO,MAAMR,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOd,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,OAAO;MAAEoB,WAAW,EAAE;IAAK,CAAC;EAC9B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}