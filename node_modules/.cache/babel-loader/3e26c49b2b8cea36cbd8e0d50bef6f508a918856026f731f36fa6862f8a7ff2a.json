{"ast":null,"code":"var _jsxFileName = \"/Users/stianjohanpettersen/Library/CloudStorage/OneDrive-OsloMet/Dataingeni\\xF8r - bachelor/3.a\\u030Aret/Bachelor/Bacheloroppgave/chatbot/src/components/Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { initialMessage, phaseOnePrompt, phaseTwoPrompt } from \"../data/chatbotPrompts\";\nimport \"../styles/Chatbot.css\";\nimport logo from \"../media/logo.png\";\nimport miniLogo from \"../media/MH_logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: \"bot\",\n    text: initialMessage\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [phase, setPhase] = useState(1);\n  const [chatId, setChatId] = useState(null); // Chat ID for testing\n  const [consent, setConsent] = useState(null);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    startNewChat();\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [messages]);\n\n  // Start en ny samtale og få en unik chat ID\n  const startNewChat = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5001/saveData/start\");\n      setChatId(response.data.chatId);\n      console.log(\"Ny samtale startet med ID:\", response.data.chatId);\n    } catch (error) {\n      console.error(\"❌ Feil ved oppstart av chat:\", error);\n    }\n  };\n\n  // Lagre en melding til backend\n  const saveMessage = async message => {\n    try {\n      await axios.post(\"http://localhost:5001/saveData/save\", {\n        chatId,\n        sender: message.sender,\n        text: message.text\n      });\n    } catch (error) {\n      console.error(\"❌ Feil ved lagring av melding:\", error);\n    }\n  };\n\n  // Håndtering av samtykke\n  const handleConsent = userConsent => {\n    setConsent(userConsent);\n    const userMsg = {\n      sender: \"user\",\n      text: userConsent ? \"Ja, jeg godtar.\" : \"Nei, jeg ønsker ikke lagring.\"\n    };\n    const botMsg = {\n      sender: \"bot\",\n      text: \"Takk for tilbakemeldingen! Da setter vi i gang. Hva heter du?\"\n    };\n    const newMessages = [...messages, userMsg, botMsg];\n    setMessages(newMessages);\n    if (userConsent) {\n      saveMessage(userMsg);\n      saveMessage(botMsg);\n    }\n  };\n\n  // Send en melding og få svar fra chatboten\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    setLoading(true);\n    const userMessage = {\n      sender: \"user\",\n      text: input.trim()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    saveMessage(userMessage);\n    setInput(\"\");\n    setIsTyping(true);\n    setTimeout(async () => {\n      let systemPrompt = phase === 1 ? phaseOnePrompt : phaseTwoPrompt;\n      const conversationMessages = messages.map(m => ({\n        role: m.sender === \"bot\" ? \"assistant\" : \"user\",\n        content: m.text\n      }));\n      const botReply = await askChatbot([...conversationMessages, {\n        role: \"user\",\n        content: input.trim()\n      }], systemPrompt);\n      const botMessage = {\n        sender: \"bot\",\n        text: botReply\n      };\n      setMessages(prev => [...prev, botMessage]);\n      saveMessage(botMessage);\n      if (phase === 1 && messages.filter(msg => msg.sender === \"bot\").length >= 5) {\n        setPhase(2);\n        setMessages(prev => [...prev, {\n          sender: \"bot\",\n          text: \"La oss gå litt dypere – hva er det egentlig du vil?\"\n        }]);\n      }\n      setIsTyping(false);\n      setLoading(false);\n    }, 500);\n  };\n\n  // Avslutt samtalen og lagre hele chatten som JSON-fil\n  const finishChat = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5001/saveData/finish\", {\n        chatId\n      });\n      console.log(\"✅ Samtale lagret som JSON-fil:\", response.data.filePath);\n    } catch (error) {\n      console.error(\"❌ Feil ved lagring av full samtale:\", error);\n    }\n  };\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"MeyerHaugen\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"chat-date\",\n        children: new Date().toLocaleDateString(\"no-NO\", {\n          weekday: \"long\",\n          day: \"numeric\",\n          month: \"long\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: [messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.sender}`,\n        children: [msg.sender === \"bot\" && (i === messages.length - 1 ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: miniLogo,\n          alt: \"Bot\",\n          className: \"bot-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bot-avatar-placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-bubble ${msg.sender}`,\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-bubble\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"chat-id\",\n      children: [\"Chat ID: \", chatId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), consent === null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"consent-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"accept\",\n        onClick: () => handleConsent(true),\n        children: \"Godta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"decline\",\n        onClick: () => handleConsent(false),\n        children: \"Avsl\\xE5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: inputRef,\n        placeholder: \"Skriv melding her\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => {\n          if (e.key === \"Enter\" && !e.shiftKey) {\n            e.preventDefault();\n            sendMessage();\n          }\n        },\n        disabled: loading,\n        rows: 1,\n        style: {\n          resize: \"none\",\n          minHeight: \"30px\",\n          maxHeight: \"200px\",\n          overflowY: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: loading,\n        children: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: finishChat,\n        className: \"finish-chat\",\n        children: \"Avslutt samtale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"EkQRaBy9IVpy766PmqLEx2aGm+0=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","initialMessage","phaseOnePrompt","phaseTwoPrompt","logo","miniLogo","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","sender","text","input","setInput","loading","setLoading","isTyping","setIsTyping","phase","setPhase","chatId","setChatId","consent","setConsent","messagesEndRef","inputRef","startNewChat","scrollToBottom","current","focus","response","post","data","console","log","error","saveMessage","message","handleConsent","userConsent","userMsg","botMsg","newMessages","sendMessage","trim","userMessage","prev","setTimeout","systemPrompt","conversationMessages","map","m","role","content","botReply","askChatbot","botMessage","filter","msg","length","finishChat","filePath","scrollIntoView","behavior","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleDateString","weekday","day","month","i","ref","onClick","placeholder","value","onChange","e","target","onKeyDown","key","shiftKey","preventDefault","disabled","rows","style","resize","minHeight","maxHeight","overflowY","_c","$RefreshReg$"],"sources":["/Users/stianjohanpettersen/Library/CloudStorage/OneDrive-OsloMet/Dataingeniør - bachelor/3.året/Bachelor/Bacheloroppgave/chatbot/src/components/Chatbot.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport {\n  initialMessage,\n  phaseOnePrompt,\n  phaseTwoPrompt,\n} from \"../data/chatbotPrompts\";\nimport \"../styles/Chatbot.css\";\nimport logo from \"../media/logo.png\";\nimport miniLogo from \"../media/MH_logo.png\";\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([{ sender: \"bot\", text: initialMessage }]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [phase, setPhase] = useState(1);\n  const [chatId, setChatId] = useState(null); // Chat ID for testing\n  const [consent, setConsent] = useState(null);\n\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    startNewChat();\n  }, []);\n\n  useEffect(() => {\n    scrollToBottom();\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [messages]);\n\n  // Start en ny samtale og få en unik chat ID\n  const startNewChat = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5001/saveData/start\");\n      setChatId(response.data.chatId);\n      console.log(\"Ny samtale startet med ID:\", response.data.chatId);\n    } catch (error) {\n      console.error(\"❌ Feil ved oppstart av chat:\", error);\n    }\n  };\n\n  // Lagre en melding til backend\n  const saveMessage = async (message) => {\n    try {\n      await axios.post(\"http://localhost:5001/saveData/save\", {\n        chatId,\n        sender: message.sender,\n        text: message.text,\n      });\n    } catch (error) {\n      console.error(\"❌ Feil ved lagring av melding:\", error);\n    }\n  };\n\n  // Håndtering av samtykke\n  const handleConsent = (userConsent) => {\n    setConsent(userConsent);\n    const userMsg = { sender: \"user\", text: userConsent ? \"Ja, jeg godtar.\" : \"Nei, jeg ønsker ikke lagring.\" };\n    const botMsg = { sender: \"bot\", text: \"Takk for tilbakemeldingen! Da setter vi i gang. Hva heter du?\" };\n\n    const newMessages = [...messages, userMsg, botMsg];\n    setMessages(newMessages);\n\n    if (userConsent) {\n      saveMessage(userMsg);\n      saveMessage(botMsg);\n    }\n  };\n\n  // Send en melding og få svar fra chatboten\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    setLoading(true);\n\n    const userMessage = { sender: \"user\", text: input.trim() };\n    setMessages((prev) => [...prev, userMessage]);\n    saveMessage(userMessage);\n    setInput(\"\");\n\n    setIsTyping(true);\n\n    setTimeout(async () => {\n      let systemPrompt = phase === 1 ? phaseOnePrompt : phaseTwoPrompt;\n      const conversationMessages = messages.map(m => ({ role: m.sender === \"bot\" ? \"assistant\" : \"user\", content: m.text }));\n\n      const botReply = await askChatbot([...conversationMessages, { role: \"user\", content: input.trim() }], systemPrompt);\n      const botMessage = { sender: \"bot\", text: botReply };\n\n      setMessages((prev) => [...prev, botMessage]);\n      saveMessage(botMessage);\n\n      if (phase === 1 && messages.filter(msg => msg.sender === \"bot\").length >= 5) {\n        setPhase(2);\n        setMessages((prev) => [...prev, { sender: \"bot\", text: \"La oss gå litt dypere – hva er det egentlig du vil?\" }]);\n      }\n\n      setIsTyping(false);\n      setLoading(false);\n    }, 500);\n  };\n\n  // Avslutt samtalen og lagre hele chatten som JSON-fil\n  const finishChat = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5001/saveData/finish\", { chatId });\n      console.log(\"✅ Samtale lagret som JSON-fil:\", response.data.filePath);\n    } catch (error) {\n      console.error(\"❌ Feil ved lagring av full samtale:\", error);\n    }\n  };\n\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <header className=\"chat-header\">\n        <img src={logo} alt=\"MeyerHaugen\" className=\"logo\" />\n        <p className=\"chat-date\">\n          {new Date().toLocaleDateString(\"no-NO\", { weekday: \"long\", day: \"numeric\", month: \"long\" })}\n        </p>\n      </header>\n\n      <div className=\"chatbot-messages\">\n        {messages.map((msg, i) => (\n          <div key={i} className={`chat-message ${msg.sender}`}>\n            {msg.sender === \"bot\" && (\n              i === messages.length - 1 ? (\n                <img src={miniLogo} alt=\"Bot\" className=\"bot-avatar\" />\n              ) : (\n                <div className=\"bot-avatar-placeholder\"></div>\n              )\n            )}\n            <div className={`chat-bubble ${msg.sender}`}>{msg.text}</div>\n          </div>\n        ))}\n\n        {isTyping && (\n          <div className=\"typing-bubble\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        )}\n\n        <div ref={messagesEndRef} />\n      </div>\n\n      <p className=\"chat-id\">Chat ID: {chatId}</p>\n\n      {consent === null ? (\n        <div className=\"consent-buttons\">\n          <button className=\"accept\" onClick={() => handleConsent(true)}>Godta</button>\n          <button className=\"decline\" onClick={() => handleConsent(false)}>Avslå</button>\n        </div>\n      ) : (\n        <div className=\"chat-input\">\n          <textarea\n            ref={inputRef}\n            placeholder=\"Skriv melding her\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\" && !e.shiftKey) {\n                e.preventDefault();\n                sendMessage();\n              }\n            }}\n            disabled={loading}\n            rows={1}\n            style={{ resize: \"none\", minHeight: \"30px\", maxHeight: \"200px\", overflowY: \"auto\" }}\n          />\n          <button onClick={sendMessage} disabled={loading}>➤</button>\n          <button onClick={finishChat} className=\"finish-chat\">Avslutt samtale</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}