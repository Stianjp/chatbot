{"ast":null,"code":"var _jsxFileName = \"/Users/stianjohanpettersen/Library/CloudStorage/OneDrive-OsloMet/Dataingeni\\xF8r - bachelor/3.a\\u030Aret/Bachelor/Bacheloroppgave/chatbot/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { askChatbot } from \"./langchainChatbot\";\nimport \"./Styling/Chatbot.css\"; // Importer CSS-filen\nimport logo from \"./media/logo.png\"; // Importer logo\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Hei! Ønsker du å godta lagring av samtalen for bedre analyse?\",\n    sender: \"bot\"\n  }]);\n  const [consent, setConsent] = useState(null); // null = ikke valgt enda\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // Lagring av brukerdata\n  const [userData, setUserData] = useState({});\n  const [currentStep, setCurrentStep] = useState(0); // Spørsmålsindeks\n\n  // Henter dagens dato automatisk i norsk format\n  const today = new Date().toLocaleDateString(\"no-NO\", {\n    weekday: \"long\",\n    day: \"numeric\",\n    month: \"long\"\n  });\n\n  // Liste over spørsmål chatboten skal stille\n  const questions = [{\n    key: \"name\",\n    text: \"Hva heter du?\"\n  }, {\n    key: \"age\",\n    text: \"Hvor gammel er du?\"\n  }, {\n    key: \"jobStatus\",\n    text: \"Er du i fast jobb, søker jobb, eller er du usikker på hva du vil?\"\n  }];\n\n  // Håndterer samtykkevalg\n  const handleConsent = userConsent => {\n    setConsent(userConsent);\n    setMessages(prev => [...prev, {\n      text: userConsent ? \"Ja, jeg godtar.\" : \"Nei, jeg ønsker ikke lagring.\",\n      sender: \"user\"\n    }, {\n      text: \"Takk for tilbakemeldingen!\",\n      sender: \"bot\"\n    }, {\n      text: questions[0].text,\n      sender: \"bot\"\n    } // Start første spørsmål\n    ]);\n  };\n\n  // Håndterer brukerens svar\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    setLoading(true);\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages(prev => [...prev, userMessage]);\n    if (currentStep < questions.length) {\n      // Lagre brukerens svar i state\n      setUserData(prev => ({\n        ...prev,\n        [questions[currentStep].key]: input\n      }));\n      const nextStep = currentStep + 1;\n      setCurrentStep(nextStep);\n\n      // Send neste spørsmål hvis det finnes flere\n      if (nextStep < questions.length) {\n        setMessages(prev => [...prev, {\n          text: questions[nextStep].text,\n          sender: \"bot\"\n        }]);\n      } else {\n        // Oppsummer data og gå til GPT-chat\n        const summary = `\n          Takk for informasjonen! Her er en oppsummering:\n          - Navn: ${userData.name || input}\n          - Alder: ${userData.age || \"Ukjent\"}\n          - Jobbsituasjon: ${userData.jobStatus || input}\n          \n          Nå kan vi gå videre ${userData.name}  og kartlegge dine styrker. Hva vil du vite mer om?`;\n        setMessages(prev => [...prev, {\n          text: summary,\n          sender: \"bot\"\n        }]);\n      }\n    } else {\n      // Etter alle spørsmålene er besvart, send brukerens meldinger til GPT\n      const botResponse = await askChatbot(input);\n      setMessages(prev => [...prev, {\n        text: botResponse,\n        sender: \"bot\"\n      }]);\n    }\n    setInput(\"\");\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"MeyerHaugen\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"chat-date\",\n        children: today\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-bubble ${msg.sender}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), consent === null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"consent-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"accept\",\n        onClick: () => handleConsent(true),\n        children: \"Godta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"decline\",\n        onClick: () => handleConsent(false),\n        children: \"Avsl\\xE5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), consent !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Skriv melding her\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === \"Enter\" && sendMessage(),\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: loading,\n        children: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"kTDnfJ7M+wo7saS/+Bobua0Bn5M=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","askChatbot","logo","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","text","sender","consent","setConsent","input","setInput","loading","setLoading","userData","setUserData","currentStep","setCurrentStep","today","Date","toLocaleDateString","weekday","day","month","questions","key","handleConsent","userConsent","prev","sendMessage","trim","userMessage","length","nextStep","summary","name","age","jobStatus","botResponse","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onClick","type","placeholder","value","onChange","e","target","onKeyPress","disabled","_c","$RefreshReg$"],"sources":["/Users/stianjohanpettersen/Library/CloudStorage/OneDrive-OsloMet/Dataingeniør - bachelor/3.året/Bachelor/Bacheloroppgave/chatbot/src/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { askChatbot } from \"./langchainChatbot\";\nimport \"./Styling/Chatbot.css\"; // Importer CSS-filen\nimport logo from \"./media/logo.png\"; // Importer logo\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([\n    { text: \"Hei! Ønsker du å godta lagring av samtalen for bedre analyse?\", sender: \"bot\" }\n  ]);\n  const [consent, setConsent] = useState(null); // null = ikke valgt enda\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  \n  // Lagring av brukerdata\n  const [userData, setUserData] = useState({});\n  const [currentStep, setCurrentStep] = useState(0); // Spørsmålsindeks\n\n  // Henter dagens dato automatisk i norsk format\n  const today = new Date().toLocaleDateString(\"no-NO\", {\n    weekday: \"long\",\n    day: \"numeric\",\n    month: \"long\"\n  });\n\n  // Liste over spørsmål chatboten skal stille\n  const questions = [\n    { key: \"name\", text: \"Hva heter du?\" },\n    { key: \"age\", text: \"Hvor gammel er du?\" },\n    { key: \"jobStatus\", text: \"Er du i fast jobb, søker jobb, eller er du usikker på hva du vil?\" }\n  ];\n\n  // Håndterer samtykkevalg\n  const handleConsent = (userConsent) => {\n    setConsent(userConsent);\n    setMessages((prev) => [\n      ...prev,\n      { text: userConsent ? \"Ja, jeg godtar.\" : \"Nei, jeg ønsker ikke lagring.\", sender: \"user\" },\n      { text: \"Takk for tilbakemeldingen!\", sender: \"bot\" },\n      { text: questions[0].text, sender: \"bot\" } // Start første spørsmål\n    ]);\n  };\n\n  // Håndterer brukerens svar\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    setLoading(true);\n\n    const userMessage = { text: input, sender: \"user\" };\n    setMessages((prev) => [...prev, userMessage]);\n\n    if (currentStep < questions.length) {\n      // Lagre brukerens svar i state\n      setUserData((prev) => ({\n        ...prev,\n        [questions[currentStep].key]: input\n      }));\n\n      const nextStep = currentStep + 1;\n      setCurrentStep(nextStep);\n\n      // Send neste spørsmål hvis det finnes flere\n      if (nextStep < questions.length) {\n        setMessages((prev) => [...prev, { text: questions[nextStep].text, sender: \"bot\" }]);\n      } else {\n        // Oppsummer data og gå til GPT-chat\n        const summary = `\n          Takk for informasjonen! Her er en oppsummering:\n          - Navn: ${userData.name || input}\n          - Alder: ${userData.age || \"Ukjent\"}\n          - Jobbsituasjon: ${userData.jobStatus || input}\n          \n          Nå kan vi gå videre ${userData.name}  og kartlegge dine styrker. Hva vil du vite mer om?`;\n        setMessages((prev) => [...prev, { text: summary, sender: \"bot\" }]);\n      }\n    } else {\n      // Etter alle spørsmålene er besvart, send brukerens meldinger til GPT\n      const botResponse = await askChatbot(input);\n      setMessages((prev) => [...prev, { text: botResponse, sender: \"bot\" }]);\n    }\n\n    setInput(\"\");\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <header className=\"chat-header\">\n        <img src={logo} alt=\"MeyerHaugen\" className=\"logo\" />\n        <p className=\"chat-date\">{today}</p> \n      </header>\n\n      <div className=\"chatbot-messages\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`chat-bubble ${msg.sender}`}>\n            {msg.text}\n          </div>\n        ))}\n      </div>\n\n      {consent === null && (\n        <div className=\"consent-buttons\">\n          <button className=\"accept\" onClick={() => handleConsent(true)}>Godta</button>\n          <button className=\"decline\" onClick={() => handleConsent(false)}>Avslå</button>\n        </div>\n      )}\n\n      {consent !== null && (\n        <div className=\"chat-input\">\n          <input\n            type=\"text\"\n            placeholder=\"Skriv melding her\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyPress={(e) => e.key === \"Enter\" && sendMessage()}\n            disabled={loading}\n          />\n          <button onClick={sendMessage} disabled={loading}>\n            ➤\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chatbot;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,OAAO,uBAAuB,CAAC,CAAC;AAChC,OAAOC,IAAI,MAAM,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CACvC;IAAES,IAAI,EAAE,+DAA+D;IAAEC,MAAM,EAAE;EAAM,CAAC,CACzF,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEnD;EACA,MAAMqB,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;IACnDC,OAAO,EAAE,MAAM;IACfC,GAAG,EAAE,SAAS;IACdC,KAAK,EAAE;EACT,CAAC,CAAC;;EAEF;EACA,MAAMC,SAAS,GAAG,CAChB;IAAEC,GAAG,EAAE,MAAM;IAAEnB,IAAI,EAAE;EAAgB,CAAC,EACtC;IAAEmB,GAAG,EAAE,KAAK;IAAEnB,IAAI,EAAE;EAAqB,CAAC,EAC1C;IAAEmB,GAAG,EAAE,WAAW;IAAEnB,IAAI,EAAE;EAAoE,CAAC,CAChG;;EAED;EACA,MAAMoB,aAAa,GAAIC,WAAW,IAAK;IACrClB,UAAU,CAACkB,WAAW,CAAC;IACvBtB,WAAW,CAAEuB,IAAI,IAAK,CACpB,GAAGA,IAAI,EACP;MAAEtB,IAAI,EAAEqB,WAAW,GAAG,iBAAiB,GAAG,+BAA+B;MAAEpB,MAAM,EAAE;IAAO,CAAC,EAC3F;MAAED,IAAI,EAAE,4BAA4B;MAAEC,MAAM,EAAE;IAAM,CAAC,EACrD;MAAED,IAAI,EAAEkB,SAAS,CAAC,CAAC,CAAC,CAAClB,IAAI;MAAEC,MAAM,EAAE;IAAM,CAAC,CAAC;IAAA,CAC5C,CAAC;EACJ,CAAC;;EAED;EACA,MAAMsB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACnB,KAAK,CAACoB,IAAI,CAAC,CAAC,EAAE;IACnBjB,UAAU,CAAC,IAAI,CAAC;IAEhB,MAAMkB,WAAW,GAAG;MAAEzB,IAAI,EAAEI,KAAK;MAAEH,MAAM,EAAE;IAAO,CAAC;IACnDF,WAAW,CAAEuB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEG,WAAW,CAAC,CAAC;IAE7C,IAAIf,WAAW,GAAGQ,SAAS,CAACQ,MAAM,EAAE;MAClC;MACAjB,WAAW,CAAEa,IAAI,KAAM;QACrB,GAAGA,IAAI;QACP,CAACJ,SAAS,CAACR,WAAW,CAAC,CAACS,GAAG,GAAGf;MAChC,CAAC,CAAC,CAAC;MAEH,MAAMuB,QAAQ,GAAGjB,WAAW,GAAG,CAAC;MAChCC,cAAc,CAACgB,QAAQ,CAAC;;MAExB;MACA,IAAIA,QAAQ,GAAGT,SAAS,CAACQ,MAAM,EAAE;QAC/B3B,WAAW,CAAEuB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;UAAEtB,IAAI,EAAEkB,SAAS,CAACS,QAAQ,CAAC,CAAC3B,IAAI;UAAEC,MAAM,EAAE;QAAM,CAAC,CAAC,CAAC;MACrF,CAAC,MAAM;QACL;QACA,MAAM2B,OAAO,GAAG;AACxB;AACA,oBAAoBpB,QAAQ,CAACqB,IAAI,IAAIzB,KAAK;AAC1C,qBAAqBI,QAAQ,CAACsB,GAAG,IAAI,QAAQ;AAC7C,6BAA6BtB,QAAQ,CAACuB,SAAS,IAAI3B,KAAK;AACxD;AACA,gCAAgCI,QAAQ,CAACqB,IAAI,sDAAsD;QAC3F9B,WAAW,CAAEuB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;UAAEtB,IAAI,EAAE4B,OAAO;UAAE3B,MAAM,EAAE;QAAM,CAAC,CAAC,CAAC;MACpE;IACF,CAAC,MAAM;MACL;MACA,MAAM+B,WAAW,GAAG,MAAMxC,UAAU,CAACY,KAAK,CAAC;MAC3CL,WAAW,CAAEuB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEtB,IAAI,EAAEgC,WAAW;QAAE/B,MAAM,EAAE;MAAM,CAAC,CAAC,CAAC;IACxE;IAEAI,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACEZ,OAAA;IAAKsC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BvC,OAAA;MAAQsC,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC7BvC,OAAA;QAAKwC,GAAG,EAAE1C,IAAK;QAAC2C,GAAG,EAAC,aAAa;QAACH,SAAS,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrD7C,OAAA;QAAGsC,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAEtB;MAAK;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eAET7C,OAAA;MAAKsC,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9BpC,QAAQ,CAAC2C,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBhD,OAAA;QAAiBsC,SAAS,EAAE,eAAeS,GAAG,CAACzC,MAAM,EAAG;QAAAiC,QAAA,EACrDQ,GAAG,CAAC1C;MAAI,GADD2C,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAELtC,OAAO,KAAK,IAAI,iBACfP,OAAA;MAAKsC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BvC,OAAA;QAAQsC,SAAS,EAAC,QAAQ;QAACW,OAAO,EAAEA,CAAA,KAAMxB,aAAa,CAAC,IAAI,CAAE;QAAAc,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7E7C,OAAA;QAAQsC,SAAS,EAAC,SAAS;QAACW,OAAO,EAAEA,CAAA,KAAMxB,aAAa,CAAC,KAAK,CAAE;QAAAc,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5E,CACN,EAEAtC,OAAO,KAAK,IAAI,iBACfP,OAAA;MAAKsC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBvC,OAAA;QACEkD,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,mBAAmB;QAC/BC,KAAK,EAAE3C,KAAM;QACb4C,QAAQ,EAAGC,CAAC,IAAK5C,QAAQ,CAAC4C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CI,UAAU,EAAGF,CAAC,IAAKA,CAAC,CAAC9B,GAAG,KAAK,OAAO,IAAII,WAAW,CAAC,CAAE;QACtD6B,QAAQ,EAAE9C;MAAQ;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eACF7C,OAAA;QAAQiD,OAAO,EAAErB,WAAY;QAAC6B,QAAQ,EAAE9C,OAAQ;QAAA4B,QAAA,EAAC;MAEjD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3C,EAAA,CAtHID,OAAO;AAAAyD,EAAA,GAAPzD,OAAO;AAwHb,eAAeA,OAAO;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}