{"ast":null,"code":"var _jsxFileName = \"/Users/stianjohanpettersen/Library/CloudStorage/OneDrive-OsloMet/Dataingeni\\xF8r - bachelor/3.a\\u030Aret/Bachelor/Bacheloroppgave/chatbot/src/components/Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { askChatbot } from \"../utils/langchainChatbot\";\nimport { initialMessage, questions, categoryResponses, chatgptPrompts } from \"../data/chatbotPrompts\";\nimport { clearBackendData, saveUserData, analyzeUserData } from \"../api/chatbotApi\";\nimport \"../styles/Chatbot.css\";\nimport logo from \"../media/logo.png\";\nimport miniLogo from \"../media/MH_logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: initialMessage,\n    sender: \"bot\"\n  }]);\n  const [consent, setConsent] = useState(null);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [userData, setUserData] = useState({});\n  const [currentStep, setCurrentStep] = useState(0);\n  const [category, setCategory] = useState(null);\n  const [chatgptActive, setChatgptActive] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const inputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    clearBackendData();\n  }, []);\n  const handleConsent = userConsent => {\n    setConsent(userConsent);\n    setMessages(prev => [...prev, {\n      text: userConsent ? \"Ja, jeg godtar.\" : \"Nei, jeg ønsker ikke lagring.\",\n      sender: \"user\"\n    }, {\n      text: \"Takk for tilbakemeldingen!\",\n      sender: \"bot\"\n    }, {\n      text: questions[0].text,\n      sender: \"bot\"\n    }]);\n  };\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    setLoading(true);\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    inputRef.current.style.height = \"30px\"; // Reset høyde til én linje etter sending\n\n    setIsTyping(true);\n    setTimeout(async () => {\n      let botResponse = \"\";\n      if (chatgptActive) {\n        const chatGptPrompt = chatgptPrompts[category] || \"Hjelp brukeren med karriereveiledning basert på tidligere svar.\";\n        botResponse = await askChatbot(input, chatGptPrompt);\n      } else if (currentStep < questions.length) {\n        const updatedUserData = {\n          ...userData,\n          [questions[currentStep].key]: input\n        };\n        setUserData(updatedUserData);\n        if (currentStep + 1 < questions.length) {\n          botResponse = questions[currentStep + 1].text;\n        } else {\n          await saveUserData(consent, updatedUserData);\n          await analyzeCategory(updatedUserData);\n          return; // Hindrer at en tom melding blir lagt til\n        }\n        setCurrentStep(currentStep + 1);\n      }\n      setMessages(prev => [...prev, {\n        text: botResponse,\n        sender: \"bot\"\n      }]);\n      setIsTyping(false);\n      setLoading(false);\n    }, 500);\n  };\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  };\n  useEffect(() => {\n    scrollToBottom();\n    if (inputRef.current) {\n      inputRef.current.focus(); // Autofokus på inputfeltet\n    }\n  }, [messages]);\n  const analyzeCategory = async userData => {\n    const result = await analyzeUserData(userData);\n    setCategory(result.category);\n    const nextMessage = categoryResponses[result.category] || \"Det oppstod en feil ved analyse av dataene dine.\";\n    setMessages(prev => [...prev, {\n      text: nextMessage,\n      sender: \"bot\"\n    }]);\n    setChatgptActive(true);\n    setLoading(false);\n    setIsTyping(false);\n  };\n  const handleInputChange = e => {\n    setInput(e.target.value);\n    e.target.style.height = \"30px\"; // Reset høyde før justering\n    e.target.style.height = `${e.target.scrollHeight}px`; // Juster til innholdets høyde\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"MeyerHaugen\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"chat-date\",\n        children: new Date().toLocaleDateString(\"no-NO\", {\n          weekday: \"long\",\n          day: \"numeric\",\n          month: \"long\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.sender}`,\n        children: [msg.sender === \"bot\" ? index === messages.length - 1 ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: miniLogo,\n          alt: \"Bot\",\n          className: \"bot-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bot-avatar-placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-bubble ${msg.sender}`,\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-bubble\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), consent === null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"consent-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"accept\",\n        onClick: () => handleConsent(true),\n        children: \"Godta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"decline\",\n        onClick: () => handleConsent(false),\n        children: \"Avsl\\xE5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), consent !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: inputRef,\n        placeholder: \"Skriv melding her\",\n        value: input,\n        onChange: handleInputChange // Bruk ny funksjon for auto-resizing\n        ,\n        onKeyDown: e => {\n          if (e.key === \"Enter\" && !e.shiftKey) {\n            e.preventDefault();\n            sendMessage();\n          }\n        },\n        disabled: loading,\n        rows: 1 // Start med én rad\n        ,\n        style: {\n          resize: \"none\",\n          minHeight: \"30px\",\n          maxHeight: \"200px\",\n          overflowY: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: loading,\n        children: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"asODLfi9vpjWJllyiMIvqDmOdFw=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","askChatbot","initialMessage","questions","categoryResponses","chatgptPrompts","clearBackendData","saveUserData","analyzeUserData","logo","miniLogo","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","text","sender","consent","setConsent","input","setInput","loading","setLoading","userData","setUserData","currentStep","setCurrentStep","category","setCategory","chatgptActive","setChatgptActive","isTyping","setIsTyping","inputRef","messagesEndRef","handleConsent","userConsent","prev","sendMessage","trim","userMessage","current","style","height","setTimeout","botResponse","chatGptPrompt","length","updatedUserData","key","analyzeCategory","scrollToBottom","scrollIntoView","behavior","focus","result","nextMessage","handleInputChange","e","target","value","scrollHeight","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleDateString","weekday","day","month","map","msg","index","ref","onClick","placeholder","onChange","onKeyDown","shiftKey","preventDefault","disabled","rows","resize","minHeight","maxHeight","overflowY","_c","$RefreshReg$"],"sources":["/Users/stianjohanpettersen/Library/CloudStorage/OneDrive-OsloMet/Dataingeniør - bachelor/3.året/Bachelor/Bacheloroppgave/chatbot/src/components/Chatbot.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { askChatbot } from \"../utils/langchainChatbot\";\nimport { initialMessage, questions, categoryResponses, chatgptPrompts } from \"../data/chatbotPrompts\";\nimport { clearBackendData, saveUserData, analyzeUserData } from \"../api/chatbotApi\";\nimport \"../styles/Chatbot.css\";\nimport logo from \"../media/logo.png\";\nimport miniLogo from \"../media/MH_logo.png\";\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([{ text: initialMessage, sender: \"bot\" }]);\n  const [consent, setConsent] = useState(null);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [userData, setUserData] = useState({});\n  const [currentStep, setCurrentStep] = useState(0);\n  const [category, setCategory] = useState(null);\n  const [chatgptActive, setChatgptActive] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const inputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    clearBackendData();\n  }, []);\n\n  const handleConsent = (userConsent) => {\n    setConsent(userConsent);\n    setMessages((prev) => [\n      ...prev,\n      { text: userConsent ? \"Ja, jeg godtar.\" : \"Nei, jeg ønsker ikke lagring.\", sender: \"user\" },\n      { text: \"Takk for tilbakemeldingen!\", sender: \"bot\" },\n      { text: questions[0].text, sender: \"bot\" }\n    ]);\n  };\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    setLoading(true);\n    const userMessage = { text: input, sender: \"user\" };\n    setMessages((prev) => [...prev, userMessage]);\n    setInput(\"\");\n    inputRef.current.style.height = \"30px\"; // Reset høyde til én linje etter sending\n\n    setIsTyping(true);\n\n    setTimeout(async () => {\n      let botResponse = \"\";\n\n      if (chatgptActive) {\n        const chatGptPrompt = chatgptPrompts[category] || \"Hjelp brukeren med karriereveiledning basert på tidligere svar.\";\n        botResponse = await askChatbot(input, chatGptPrompt);\n      } else if (currentStep < questions.length) {\n        const updatedUserData = { ...userData, [questions[currentStep].key]: input };\n        setUserData(updatedUserData);\n\n        if (currentStep + 1 < questions.length) {\n          botResponse = questions[currentStep + 1].text;\n        } else {\n          await saveUserData(consent, updatedUserData);\n          await analyzeCategory(updatedUserData);\n          return; // Hindrer at en tom melding blir lagt til\n        }\n\n        setCurrentStep(currentStep + 1);\n      }\n\n      setMessages((prev) => [...prev, { text: botResponse, sender: \"bot\" }]);\n      setIsTyping(false);\n      setLoading(false);\n    }, 500);\n  };\n\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n    if (inputRef.current) {\n      inputRef.current.focus(); // Autofokus på inputfeltet\n    }\n  }, [messages]);  \n\n  const analyzeCategory = async (userData) => {\n    const result = await analyzeUserData(userData);\n    setCategory(result.category);\n\n    const nextMessage = categoryResponses[result.category] || \"Det oppstod en feil ved analyse av dataene dine.\";\n    setMessages((prev) => [...prev, { text: nextMessage, sender: \"bot\" }]);\n\n    setChatgptActive(true);\n    setLoading(false);\n    setIsTyping(false);\n  };\n  \n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n    e.target.style.height = \"30px\"; // Reset høyde før justering\n    e.target.style.height = `${e.target.scrollHeight}px`; // Juster til innholdets høyde\n  };\n  \n  return (\n    <div className=\"chat-container\">\n      <header className=\"chat-header\">\n        <img src={logo} alt=\"MeyerHaugen\" className=\"logo\" />\n        <p className=\"chat-date\">\n          {new Date().toLocaleDateString(\"no-NO\", { weekday: \"long\", day: \"numeric\", month: \"long\" })}\n        </p>\n      </header>\n\n      <div className=\"chatbot-messages\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`chat-message ${msg.sender}`}>\n            {msg.sender === \"bot\" ? (\n              index === messages.length - 1 ? (\n                <img src={miniLogo} alt=\"Bot\" className=\"bot-avatar\" />\n              ) : (\n                <div className=\"bot-avatar-placeholder\"></div>\n              )\n            ) : null}\n            <div className={`chat-bubble ${msg.sender}`}>{msg.text}</div>\n          </div>\n        ))}\n\n        {isTyping && (\n          <div className=\"typing-bubble\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        )}\n        \n        <div ref={messagesEndRef} />\n      </div>\n\n      {consent === null && (\n        <div className=\"consent-buttons\">\n          <button className=\"accept\" onClick={() => handleConsent(true)}>Godta</button>\n          <button className=\"decline\" onClick={() => handleConsent(false)}>Avslå</button>\n        </div>\n      )}\n\n      {consent !== null && (\n        <div className=\"chat-input\">\n          <textarea\n          ref={inputRef}\n          placeholder=\"Skriv melding her\"\n          value={input}\n          onChange={handleInputChange} // Bruk ny funksjon for auto-resizing\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\" && !e.shiftKey) {\n              e.preventDefault();\n              sendMessage();\n            }\n          }}\n          disabled={loading}\n          rows={1} // Start med én rad\n          style={{\n            resize: \"none\",\n            minHeight: \"30px\",\n            maxHeight: \"200px\",\n            overflowY: \"auto\"\n          }}\n          />\n          <button onClick={sendMessage} disabled={loading}>➤</button>\n        </div>\n      )}\n    </div>\n  );\n};\n  export default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}