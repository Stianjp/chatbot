{"ast":null,"code":"var _jsxFileName = \"/Users/stianjohanpettersen/Library/CloudStorage/OneDrive-OsloMet/Dataingeni\\xF8r - bachelor/3.a\\u030Aret/Bachelor/Bacheloroppgave/chatbot/src/components/Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { askChatbot } from \"..//langchainChatbot\";\nimport { initialMessage, questions, categoryResponses } from \"../chatbotPrompts\";\nimport { clearBackendData, saveUserData, analyzeUserData } from \"../chatbotApi\";\nimport \"../Styling/Chatbot.css\";\nimport logo from \"../media/logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: initialMessage,\n    sender: \"bot\"\n  }]);\n  const [consent, setConsent] = useState(null);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [userData, setUserData] = useState({});\n  const [currentStep, setCurrentStep] = useState(0);\n  const [category, setCategory] = useState(null);\n  useEffect(() => {\n    clearBackendData();\n  }, []);\n  const handleConsent = userConsent => {\n    setConsent(userConsent);\n    setMessages(prev => [...prev, {\n      text: userConsent ? \"Ja, jeg godtar.\" : \"Nei, jeg ønsker ikke lagring.\",\n      sender: \"user\"\n    }, {\n      text: \"Takk for tilbakemeldingen!\",\n      sender: \"bot\"\n    }, {\n      text: questions[0].text,\n      sender: \"bot\"\n    }]);\n  };\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    setLoading(true);\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages(prev => [...prev, userMessage]);\n    if (currentStep < questions.length) {\n      const updatedUserData = {\n        ...userData,\n        [questions[currentStep].key]: input\n      };\n      setUserData(updatedUserData);\n      if (currentStep + 1 < questions.length) {\n        setMessages(prev => [...prev, {\n          text: questions[currentStep + 1].text,\n          sender: \"bot\"\n        }]);\n      } else {\n        const summary = `\n          Takk for informasjonen! Her er en oppsummering:\n          - Navn: ${updatedUserData.name}\n          - Alder: ${updatedUserData.age}\n          - Jobbsituasjon: ${updatedUserData.jobStatus}\n          - Mål: ${updatedUserData.goal}\n          \n          Nå analyserer jeg informasjonen din for å hjelpe deg videre...\n        `;\n        setMessages(prev => [...prev, {\n          text: summary,\n          sender: \"bot\"\n        }]);\n        await saveUserData(consent, updatedUserData);\n        analyzeCategory(updatedUserData);\n      }\n      setCurrentStep(currentStep + 1);\n    } else {\n      const botResponse = await askChatbot(input);\n      setMessages(prev => [...prev, {\n        text: botResponse,\n        sender: \"bot\"\n      }]);\n    }\n    setInput(\"\");\n    setLoading(false);\n  };\n  const analyzeCategory = async userData => {\n    const result = await analyzeUserData(userData);\n    setCategory(result.category);\n    const nextMessage = categoryResponses[result.category] || \"Det oppstod en feil ved analyse av dataene dine.\";\n    setMessages(prev => [...prev, {\n      text: nextMessage,\n      sender: \"bot\"\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"MeyerHaugen\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"chat-date\",\n        children: new Date().toLocaleDateString(\"no-NO\", {\n          weekday: \"long\",\n          day: \"numeric\",\n          month: \"long\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-bubble ${msg.sender}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), consent === null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"consent-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"accept\",\n        onClick: () => handleConsent(true),\n        children: \"Godta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"decline\",\n        onClick: () => handleConsent(false),\n        children: \"Avsl\\xE5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), consent !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Skriv melding her\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === \"Enter\" && sendMessage(),\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: loading,\n        children: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"pmmptDCaopQoL/DQ+pyAAbHtd5s=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","askChatbot","initialMessage","questions","categoryResponses","clearBackendData","saveUserData","analyzeUserData","logo","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","text","sender","consent","setConsent","input","setInput","loading","setLoading","userData","setUserData","currentStep","setCurrentStep","category","setCategory","handleConsent","userConsent","prev","sendMessage","trim","userMessage","length","updatedUserData","key","summary","name","age","jobStatus","goal","analyzeCategory","botResponse","result","nextMessage","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleDateString","weekday","day","month","map","msg","index","onClick","type","placeholder","value","onChange","e","target","onKeyPress","disabled","_c","$RefreshReg$"],"sources":["/Users/stianjohanpettersen/Library/CloudStorage/OneDrive-OsloMet/Dataingeniør - bachelor/3.året/Bachelor/Bacheloroppgave/chatbot/src/components/Chatbot.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { askChatbot } from \"..//langchainChatbot\";\nimport { initialMessage, questions, categoryResponses } from \"../chatbotPrompts\";\nimport { clearBackendData, saveUserData, analyzeUserData } from \"../chatbotApi\";\nimport \"../Styling/Chatbot.css\";\nimport logo from \"../media/logo.png\";\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([{ text: initialMessage, sender: \"bot\" }]);\n  const [consent, setConsent] = useState(null);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [userData, setUserData] = useState({});\n  const [currentStep, setCurrentStep] = useState(0);\n  const [category, setCategory] = useState(null);\n\n  useEffect(() => {\n    clearBackendData();\n  }, []);\n\n  const handleConsent = (userConsent) => {\n    setConsent(userConsent);\n    setMessages((prev) => [\n      ...prev,\n      { text: userConsent ? \"Ja, jeg godtar.\" : \"Nei, jeg ønsker ikke lagring.\", sender: \"user\" },\n      { text: \"Takk for tilbakemeldingen!\", sender: \"bot\" },\n      { text: questions[0].text, sender: \"bot\" }\n    ]);\n  };\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    setLoading(true);\n\n    const userMessage = { text: input, sender: \"user\" };\n    setMessages((prev) => [...prev, userMessage]);\n\n    if (currentStep < questions.length) {\n      const updatedUserData = { ...userData, [questions[currentStep].key]: input };\n      setUserData(updatedUserData);\n\n      if (currentStep + 1 < questions.length) {\n        setMessages((prev) => [...prev, { text: questions[currentStep + 1].text, sender: \"bot\" }]);\n      } else {\n        const summary = `\n          Takk for informasjonen! Her er en oppsummering:\n          - Navn: ${updatedUserData.name}\n          - Alder: ${updatedUserData.age}\n          - Jobbsituasjon: ${updatedUserData.jobStatus}\n          - Mål: ${updatedUserData.goal}\n          \n          Nå analyserer jeg informasjonen din for å hjelpe deg videre...\n        `;\n        setMessages((prev) => [...prev, { text: summary, sender: \"bot\" }]);\n\n        await saveUserData(consent, updatedUserData);\n        analyzeCategory(updatedUserData);\n      }\n\n      setCurrentStep(currentStep + 1);\n    } else {\n      const botResponse = await askChatbot(input);\n      setMessages((prev) => [...prev, { text: botResponse, sender: \"bot\" }]);\n    }\n\n    setInput(\"\");\n    setLoading(false);\n  };\n\n  const analyzeCategory = async (userData) => {\n    const result = await analyzeUserData(userData);\n    setCategory(result.category);\n\n    const nextMessage = categoryResponses[result.category] || \"Det oppstod en feil ved analyse av dataene dine.\";\n    setMessages((prev) => [...prev, { text: nextMessage, sender: \"bot\" }]);\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <header className=\"chat-header\">\n        <img src={logo} alt=\"MeyerHaugen\" className=\"logo\" />\n        <p className=\"chat-date\">\n          {new Date().toLocaleDateString(\"no-NO\", { weekday: \"long\", day: \"numeric\", month: \"long\" })}\n        </p>\n      </header>\n\n      <div className=\"chatbot-messages\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`chat-bubble ${msg.sender}`}>\n            {msg.text}\n          </div>\n        ))}\n      </div>\n\n      {consent === null && (\n        <div className=\"consent-buttons\">\n          <button className=\"accept\" onClick={() => handleConsent(true)}>Godta</button>\n          <button className=\"decline\" onClick={() => handleConsent(false)}>Avslå</button>\n        </div>\n      )}\n\n      {consent !== null && (\n        <div className=\"chat-input\">\n          <input\n            type=\"text\"\n            placeholder=\"Skriv melding her\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyPress={(e) => e.key === \"Enter\" && sendMessage()}\n            disabled={loading}\n          />\n          <button onClick={sendMessage} disabled={loading}>➤</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}