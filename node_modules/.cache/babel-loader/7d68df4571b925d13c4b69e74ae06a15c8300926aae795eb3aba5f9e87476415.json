{"ast":null,"code":"var _jsxFileName = \"/Users/stianjohanpettersen/Library/CloudStorage/OneDrive-OsloMet/Dataingeni\\xF8r - bachelor/3.a\\u030Aret/Bachelor/Bacheloroppgave/chatbot/src/components/Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { askChatbot } from \"../utils/langchainChatbot\";\nimport { initialMessage, questions, categoryResponses, chatgptPrompts } from \"../data/chatbotPrompts\";\nimport { clearBackendData, saveUserData, analyzeUserData } from \"../api/chatbotApi\";\nimport \"../styles/Chatbot.css\";\nimport logo from \"../media/logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: initialMessage,\n    sender: \"bot\"\n  }]);\n  const [consent, setConsent] = useState(null);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [userData, setUserData] = useState({});\n  const [currentStep, setCurrentStep] = useState(0);\n  const [category, setCategory] = useState(null);\n  const [chatgptActive, setChatgptActive] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  useEffect(() => {\n    clearBackendData();\n  }, []);\n  const handleConsent = userConsent => {\n    setConsent(userConsent);\n    setMessages(prev => [...prev, {\n      text: userConsent ? \"Ja, jeg godtar.\" : \"Nei, jeg ønsker ikke lagring.\",\n      sender: \"user\"\n    }, {\n      text: \"Takk for tilbakemeldingen!\",\n      sender: \"bot\"\n    }, {\n      text: questions[0].text,\n      sender: \"bot\"\n    }]);\n  };\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    setLoading(true);\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    setIsTyping(true); // Vis typing-boblen\n\n    setTimeout(async () => {\n      let botResponse = \"\";\n      if (chatgptActive) {\n        const chatGptPrompt = chatgptPrompts[category] || \"Hjelp brukeren med karriereveiledning basert på tidligere svar.\";\n        botResponse = await askChatbot(input, chatGptPrompt);\n      } else if (currentStep < questions.length) {\n        const updatedUserData = {\n          ...userData,\n          [questions[currentStep].key]: input\n        };\n        setUserData(updatedUserData);\n        if (currentStep + 1 < questions.length) {\n          botResponse = questions[currentStep + 1].text;\n        } else {\n          botResponse = `\n                    Takk for informasjonen! Her er en oppsummering:\n                    - Navn: ${updatedUserData.name}\n                    - Alder: ${updatedUserData.age}\n                    - Jobbsituasjon: ${updatedUserData.jobStatus}\n                    - Mål: ${updatedUserData.goal}\n\n                    Nå analyserer jeg informasjonen din for å hjelpe deg videre...\n                `;\n          await saveUserData(consent, updatedUserData);\n          analyzeCategory(updatedUserData);\n        }\n        setCurrentStep(currentStep + 1);\n      }\n      setTimeout(() => {\n        setMessages(prev => [...prev, {\n          text: botResponse,\n          sender: \"bot\"\n        }]);\n        setIsTyping(false); // Skjul typing-boblen etter at meldingen er lagt til\n        setLoading(false);\n      }, 1000); // Gir en liten ekstra forsinkelse før meldingen vises\n    }, 500); // Simulerer at chatboten \"skriver\" i 1,5 sekunder\n  };\n  const analyzeCategory = async userData => {\n    const result = await analyzeUserData(userData);\n    setCategory(result.category);\n    const nextMessage = categoryResponses[result.category] || \"Det oppstod en feil ved analyse av dataene dine.\";\n    setMessages(prev => [...prev, {\n      text: nextMessage,\n      sender: \"bot\"\n    }]);\n\n    // 🔹 **Aktiver ChatGPT for videre samtale**\n    setChatgptActive(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"MeyerHaugen\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"chat-date\",\n        children: new Date().toLocaleDateString(\"no-NO\", {\n          weekday: \"long\",\n          day: \"numeric\",\n          month: \"long\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.sender}`,\n        children: [msg.sender === \"bot\" ? index === messages.length - 1 ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Bot\",\n          className: \"bot-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bot-avatar-placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-bubble ${msg.sender}`,\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-bubble\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), consent === null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"consent-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"accept\",\n        onClick: () => handleConsent(true),\n        children: \"Godta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"decline\",\n        onClick: () => handleConsent(false),\n        children: \"Avsl\\xE5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), consent !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Skriv melding her\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && sendMessage(),\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: loading,\n        children: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"OHLpvREtFlZB3MuKeu1veXs1fWM=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","askChatbot","initialMessage","questions","categoryResponses","chatgptPrompts","clearBackendData","saveUserData","analyzeUserData","logo","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","text","sender","consent","setConsent","input","setInput","loading","setLoading","userData","setUserData","currentStep","setCurrentStep","category","setCategory","chatgptActive","setChatgptActive","isTyping","setIsTyping","handleConsent","userConsent","prev","sendMessage","trim","userMessage","setTimeout","botResponse","chatGptPrompt","length","updatedUserData","key","name","age","jobStatus","goal","analyzeCategory","result","nextMessage","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleDateString","weekday","day","month","map","msg","index","onClick","type","placeholder","value","onChange","e","target","onKeyDown","disabled","_c","$RefreshReg$"],"sources":["/Users/stianjohanpettersen/Library/CloudStorage/OneDrive-OsloMet/Dataingeniør - bachelor/3.året/Bachelor/Bacheloroppgave/chatbot/src/components/Chatbot.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { askChatbot } from \"../utils/langchainChatbot\";\nimport { initialMessage, questions, categoryResponses, chatgptPrompts } from \"../data/chatbotPrompts\";\nimport { clearBackendData, saveUserData, analyzeUserData } from \"../api/chatbotApi\";\nimport \"../styles/Chatbot.css\";\nimport logo from \"../media/logo.png\";\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([{ text: initialMessage, sender: \"bot\" }]);\n  const [consent, setConsent] = useState(null);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [userData, setUserData] = useState({});\n  const [currentStep, setCurrentStep] = useState(0);\n  const [category, setCategory] = useState(null);\n  const [chatgptActive, setChatgptActive] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n\n  useEffect(() => {\n    clearBackendData();\n  }, []);\n\n  const handleConsent = (userConsent) => {\n    setConsent(userConsent);\n    setMessages((prev) => [\n      ...prev,\n      { text: userConsent ? \"Ja, jeg godtar.\" : \"Nei, jeg ønsker ikke lagring.\", sender: \"user\" },\n      { text: \"Takk for tilbakemeldingen!\", sender: \"bot\" },\n      { text: questions[0].text, sender: \"bot\" }\n    ]);\n  };\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    setLoading(true);\n\n    const userMessage = { text: input, sender: \"user\" };\n    setMessages((prev) => [...prev, userMessage]);\n    setInput(\"\");\n\n    setIsTyping(true); // Vis typing-boblen\n\n    setTimeout(async () => {\n        let botResponse = \"\";\n\n        if (chatgptActive) {\n            const chatGptPrompt = chatgptPrompts[category] || \"Hjelp brukeren med karriereveiledning basert på tidligere svar.\";\n            botResponse = await askChatbot(input, chatGptPrompt);\n        } else if (currentStep < questions.length) {\n            const updatedUserData = { ...userData, [questions[currentStep].key]: input };\n            setUserData(updatedUserData);\n\n            if (currentStep + 1 < questions.length) {\n                botResponse = questions[currentStep + 1].text;\n            } else {\n                botResponse = `\n                    Takk for informasjonen! Her er en oppsummering:\n                    - Navn: ${updatedUserData.name}\n                    - Alder: ${updatedUserData.age}\n                    - Jobbsituasjon: ${updatedUserData.jobStatus}\n                    - Mål: ${updatedUserData.goal}\n\n                    Nå analyserer jeg informasjonen din for å hjelpe deg videre...\n                `;\n\n                await saveUserData(consent, updatedUserData);\n                analyzeCategory(updatedUserData);\n            }\n\n            setCurrentStep(currentStep + 1);\n        }\n\n        setTimeout(() => {\n            setMessages((prev) => [...prev, { text: botResponse, sender: \"bot\" }]);\n            setIsTyping(false); // Skjul typing-boblen etter at meldingen er lagt til\n            setLoading(false);\n        }, 1000); // Gir en liten ekstra forsinkelse før meldingen vises\n\n    }, 500); // Simulerer at chatboten \"skriver\" i 1,5 sekunder\n};\n\n\n  \n  const analyzeCategory = async (userData) => {\n    const result = await analyzeUserData(userData);\n    setCategory(result.category);\n\n    const nextMessage = categoryResponses[result.category] || \"Det oppstod en feil ved analyse av dataene dine.\";\n    setMessages((prev) => [...prev, { text: nextMessage, sender: \"bot\" }]);\n\n    // 🔹 **Aktiver ChatGPT for videre samtale**\n    setChatgptActive(true);\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <header className=\"chat-header\">\n        <img src={logo} alt=\"MeyerHaugen\" className=\"logo\" />\n        <p className=\"chat-date\">\n          {new Date().toLocaleDateString(\"no-NO\", { weekday: \"long\", day: \"numeric\", month: \"long\" })}\n        </p>\n      </header>\n\n      <div className=\"chatbot-messages\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`chat-message ${msg.sender}`}>\n            {msg.sender === \"bot\" ? (\n              index === messages.length - 1 ? (\n                <img src={logo} alt=\"Bot\" className=\"bot-avatar\" />\n              ) : (\n                <div className=\"bot-avatar-placeholder\"></div>\n              )\n            ) : null}\n            <div className={`chat-bubble ${msg.sender}`}>{msg.text}</div>\n          </div>        \n        ))}\n\n        {isTyping && (\n          <div className=\"typing-bubble\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        )}\n      </div>\n\n\n      {consent === null && (\n        <div className=\"consent-buttons\">\n          <button className=\"accept\" onClick={() => handleConsent(true)}>Godta</button>\n          <button className=\"decline\" onClick={() => handleConsent(false)}>Avslå</button>\n        </div>\n      )}\n\n      {consent !== null && (\n        <div className=\"chat-input\">\n          <input\n            type=\"text\"\n            placeholder=\"Skriv melding her\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\n            disabled={loading}\n          />\n          <button onClick={sendMessage} disabled={loading}>➤</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}