{"ast":null,"code":"if (chatgptActive && category) {\n  // Sett opp systemPrompt (ditt “chatgptPrompts[category]”)\n  const systemPrompt = chatgptPrompts[category];\n\n  // 1) Konverter React-meldinger til OpenAI-stil\n  const conversationMessages = messages.map(msg => ({\n    role: msg.sender === \"bot\" ? \"assistant\" : \"user\",\n    content: msg.text\n  }));\n\n  // 2) Legg til den nye meldingen fra brukeren\n  conversationMessages.push({\n    role: \"user\",\n    content: input\n  });\n\n  // 3) Kall askChatbot\n  botResponse = await askChatbot(conversationMessages, systemPrompt);\n}","map":{"version":3,"names":["chatgptActive","category","systemPrompt","chatgptPrompts","conversationMessages","messages","map","msg","role","sender","content","text","push","input","botResponse","askChatbot"],"sources":["/Users/stianjohanpettersen/Library/CloudStorage/OneDrive-OsloMet/Dataingeniør - bachelor/3.året/Bachelor/Bacheloroppgave/chatbot/src/utils/langchainChatbot.js"],"sourcesContent":["if (chatgptActive && category) {\n    // Sett opp systemPrompt (ditt “chatgptPrompts[category]”)\n    const systemPrompt = chatgptPrompts[category];\n  \n    // 1) Konverter React-meldinger til OpenAI-stil\n    const conversationMessages = messages.map((msg) => ({\n      role: msg.sender === \"bot\" ? \"assistant\" : \"user\",\n      content: msg.text,\n    }));\n  \n    // 2) Legg til den nye meldingen fra brukeren\n    conversationMessages.push({\n      role: \"user\",\n      content: input, \n    });\n  \n    // 3) Kall askChatbot\n    botResponse = await askChatbot(conversationMessages, systemPrompt);\n  }"],"mappings":"AAAA,IAAIA,aAAa,IAAIC,QAAQ,EAAE;EAC3B;EACA,MAAMC,YAAY,GAAGC,cAAc,CAACF,QAAQ,CAAC;;EAE7C;EACA,MAAMG,oBAAoB,GAAGC,QAAQ,CAACC,GAAG,CAAEC,GAAG,KAAM;IAClDC,IAAI,EAAED,GAAG,CAACE,MAAM,KAAK,KAAK,GAAG,WAAW,GAAG,MAAM;IACjDC,OAAO,EAAEH,GAAG,CAACI;EACf,CAAC,CAAC,CAAC;;EAEH;EACAP,oBAAoB,CAACQ,IAAI,CAAC;IACxBJ,IAAI,EAAE,MAAM;IACZE,OAAO,EAAEG;EACX,CAAC,CAAC;;EAEF;EACAC,WAAW,GAAG,MAAMC,UAAU,CAACX,oBAAoB,EAAEF,YAAY,CAAC;AACpE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}