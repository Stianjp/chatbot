{"ast":null,"code":"var _jsxFileName = \"/Users/stianjohanpettersen/Library/CloudStorage/OneDrive-OsloMet/Dataingeni\\xF8r - bachelor/3.a\\u030Aret/Bachelor/Bacheloroppgave/chatbot/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { askChatbot } from \"./langchainChatbot\";\nimport \"./Styling/Chatbot.css\"; // Importer CSS-filen\nimport logo from \"./media/logo.png\"; // Importer logo\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Hei! Ønsker du å godta lagring av samtalen for bedre analyse?\",\n    sender: \"bot\"\n  }]);\n  const [consent, setConsent] = useState(null); // null = ikke valgt enda\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // Henter dagens dato automatisk i norsk format\n  const today = new Date().toLocaleDateString(\"no-NO\", {\n    weekday: \"long\",\n    day: \"numeric\",\n    month: \"long\"\n  });\n\n  // Funksjon for å håndtere samtykkevalg\n  const handleConsent = userConsent => {\n    setConsent(userConsent);\n    setMessages(prev => [...prev, {\n      text: userConsent ? \"Ja, jeg godtar.\" : \"Nei, jeg ønsker ikke lagring.\",\n      sender: \"user\"\n    }, {\n      text: \"Takk for tilbakemeldingen!\",\n      sender: \"bot\"\n    }, {\n      text: \"Hva heter du?\",\n      sender: \"bot\"\n    }]);\n  };\n\n  // Funksjon for å sende meldinger til GPT\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    setLoading(true);\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    }; // Brukerens melding\n    setMessages(prev => [...prev, userMessage]); // Legg til brukerens melding\n\n    try {\n      const botResponse = await askChatbot(input);\n      setMessages(prev => [...prev, {\n        text: botResponse,\n        sender: \"bot\"\n      }]);\n    } catch (error) {\n      console.error(\"Feil ved API-kall:\", error);\n    }\n    setInput(\"\");\n    setLoading(false);\n  };\n  {/* Header med logo og dato */}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"MeyerHaugen\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"chat-date\",\n        children: today\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-bubble ${msg.sender}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), consent === null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"consent-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"accept\",\n        onClick: () => handleConsent(true),\n        children: \"Godta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"decline\",\n        onClick: () => handleConsent(false),\n        children: \"Avsl\\xE5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), consent !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Skriv melding her\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === \"Enter\" && sendMessage(),\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: loading,\n        children: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"M0Pi3a9rudcA+Fg2V7ICche+a5U=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","askChatbot","logo","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","text","sender","consent","setConsent","input","setInput","loading","setLoading","today","Date","toLocaleDateString","weekday","day","month","handleConsent","userConsent","prev","sendMessage","trim","userMessage","botResponse","error","console","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onClick","type","placeholder","value","onChange","e","target","onKeyPress","key","disabled","_c","$RefreshReg$"],"sources":["/Users/stianjohanpettersen/Library/CloudStorage/OneDrive-OsloMet/Dataingeniør - bachelor/3.året/Bachelor/Bacheloroppgave/chatbot/src/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { askChatbot } from \"./langchainChatbot\";\nimport \"./Styling/Chatbot.css\"; // Importer CSS-filen\nimport logo from \"./media/logo.png\"; // Importer logo\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([\n    { text: \"Hei! Ønsker du å godta lagring av samtalen for bedre analyse?\", sender: \"bot\" }\n  ]);\n  const [consent, setConsent] = useState(null); // null = ikke valgt enda\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // Henter dagens dato automatisk i norsk format\n  const today = new Date().toLocaleDateString(\"no-NO\", {\n    weekday: \"long\",\n    day: \"numeric\",\n    month: \"long\"\n  });\n\n  // Funksjon for å håndtere samtykkevalg\n  const handleConsent = (userConsent) => {\n    setConsent(userConsent);\n    setMessages((prev) => [\n      ...prev,\n      { text: userConsent ? \"Ja, jeg godtar.\" : \"Nei, jeg ønsker ikke lagring.\", sender: \"user\" },\n      { text: \"Takk for tilbakemeldingen!\", sender: \"bot\" },\n      { text: \"Hva heter du?\", sender: \"bot\" }\n\n    ]);\n  };\n\n  // Funksjon for å sende meldinger til GPT\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    setLoading(true);\n\n    const userMessage = { text: input, sender: \"user\" }; // Brukerens melding\n    setMessages((prev) => [...prev, userMessage]); // Legg til brukerens melding\n\n    try {\n      const botResponse = await askChatbot(input);\n      setMessages((prev) => [...prev, { text: botResponse, sender: \"bot\" }]);\n    } catch (error) {\n      console.error(\"Feil ved API-kall:\", error);\n    }\n\n    setInput(\"\");\n    setLoading(false);\n  };\n\n  {/* Header med logo og dato */}\n  return (\n    <div className=\"chat-container\">\n      {/* Header med logo og dato */}\n      <header className=\"chat-header\">\n        <img src={logo} alt=\"MeyerHaugen\" className=\"logo\" />\n        <p className=\"chat-date\">{today}</p> \n      </header>\n\n      {/* Endret til bobler: Chatmeldinger */}\n      <div className=\"chatbot-messages\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`chat-bubble ${msg.sender}`}>\n            {msg.text}\n          </div>\n        ))}\n      </div>\n\n      {/* Endret spacing i css: Vis samtykkevalg først */}\n      {consent === null && (\n        <div className=\"consent-buttons\">\n          <button className=\"accept\" onClick={() => handleConsent(true)}>Godta</button>\n          <button className=\"decline\" onClick={() => handleConsent(false)}>Avslå</button>\n        </div>\n      )}\n\n      {/* Endret classname, la til placeholder, endret til pil: Vis inputfelt kun hvis samtykke er valgt */}\n      {consent !== null && (\n        <div className=\"chat-input\">\n          <input\n            type=\"text\"\n            placeholder=\"Skriv melding her\" \n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyPress={(e) => e.key === \"Enter\" && sendMessage()}\n            disabled={loading}\n          />\n          <button onClick={sendMessage} disabled={loading}>\n            ➤\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}