{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import axios from\"axios\";import{initialMessage,phaseOnePrompt,phaseTwoPrompt}from\"../data/chatbotPrompts\";import\"../styles/Chatbot.css\";import{askChatbot}from\"../utils/langchainChatbot\";import logo from\"../media/logo.png\";import miniLogo from\"../media/MH_logo.png\";import{IoClose}from\"react-icons/io5\";/*\n  Chatbot.jsx:\n  - Fase = 1 => GPT bruker phaseOnePrompt (5-8 sp√∏rsm√•l).\n  - Fase = 2 => GPT bruker phaseTwoPrompt (7 sp√∏rsm√•l + oppsummering).\n*/import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chatbot=()=>{// Meldingshistorikk\nconst[messages,setMessages]=useState([{sender:\"bot\",text:initialMessage}]);// Samtykke (hvis du fremdeles vil bruke det)\nconst[consent,setConsent]=useState(null);// Brukerens input + states\nconst[input,setInput]=useState(\"\");const[loading,setLoading]=useState(false);const[isTyping,setIsTyping]=useState(false);const[chatId,setChatId]=useState(null);// ID for samtalen\nconst[hoverText,setHoverText]=useState(\"Klikk for √• kopiere ID\");const[hoverXbottom,setHoverXbottom]=useState(\"Klikk for √• avslutte samtalen\");// Fase-styring: 1 = kort kartlegging, 2 = dyp motivasjon\nconst[phase,setPhase]=useState(1);const messagesEndRef=useRef(null);const inputRef=useRef(null);useEffect(()=>{clearData();// T√∏m userData.json n√•r siden lastes inn\nstartNewChat();// Start en ny samtale n√•r chatboten lastes inn\n},[]);// Start en ny samtale og hent en ID\nconst startNewChat=async()=>{try{const response=await axios.post(\"http://localhost:5001/saveData/start\");setChatId(response.data.chatId);console.log(\"Ny samtale startet med ID:\",response.data.chatId);}catch(error){console.error(\"‚ùå Feil ved oppstart av chat:\",error);}};// Autoscroll / autofokus\nuseEffect(()=>{scrollToBottom();if(inputRef.current){inputRef.current.focus();}},[messages]);// T√∏m userData.json\nconst clearData=async()=>{try{await axios.post(\"http://localhost:5001/api/clearData\");console.log(\"userData.json t√∏mt\");}catch(error){console.error(\"‚ùå Feil ved t√∏mming av userData.json:\",error);}};// Samtykke-h√•ndtering\nconst handleConsent=userConsent=>{setConsent(userConsent);const userMsg={sender:\"user\",text:userConsent?\"Ja, jeg samtykker.\":\"Nei, jeg √∏nsker ikke lagring.\"};const botMsg={sender:\"bot\",text:\"Tusen takk! Mitt navn er SoftAI, hva heter du?\"};const newMessages=[...messages,userMsg,botMsg];setMessages(newMessages);if(userConsent){saveMessage(userMsg);saveMessage(botMsg);}};// Send melding\nconst sendMessage=async()=>{if(!input.trim())return;setLoading(true);// Legg til brukermelding\nconst userMessage={sender:\"user\",text:input.trim()};setMessages(prev=>[...prev,userMessage]);saveMessage(userMessage);setInput(\"\");inputRef.current.style.height=\"30px\";setIsTyping(true);// Vent litt og kall GPT\nsetTimeout(async()=>{let botReply=\"\";// 1) Bygg hele konversasjonen i GPT-format\nconst conversationMessages=buildConversationForGPT([...messages,userMessage]);// 2) Velg prompt basert p√• fase\nlet systemPrompt=phaseOnePrompt;if(phase===2){systemPrompt=phaseTwoPrompt;}// 3) Kall GPT\nbotReply=await askChatbot(conversationMessages,systemPrompt);// 4) TELL antall assistent-svar i denne fasen\nconst newAssistantCount=countAssistantMessages([...messages,{sender:\"bot\",text:botReply}],phase);// 5) Bytt til fase 2 hvis vi er i fase 1 og GPT har passert ~5‚Äì8 meldinger\nif(phase===1&&newAssistantCount>=8){console.log(\"Bytter til fase 2...\");// Sett fase til 2\nsetPhase(2);}// 6) Oppdater meldinger med GPT-svar\nsetMessages(prev=>[...prev,{sender:\"bot\",text:botReply}]);saveMessage({sender:\"bot\",text:botReply});setIsTyping(false);setLoading(false);},500);};// Ensure phase 2 is activated properly\nuseEffect(()=>{if(phase===2){console.log(\" Fase 2 er aktivert! Bytter til dyp motivasjonsanalyse.\");}},[phase]);// Lagre en melding til backend\nconst saveMessage=async message=>{try{await axios.post(\"http://localhost:5001/saveData/save\",{chatId,sender:message.sender,text:message.text});}catch(error){console.error(\"‚ùå Feil ved lagring av melding:\",error);}};const[chatEnded,setChatEnded]=useState(false);// Avslutt samtale og lagre den\nconst finishChat=async()=>{if(isFinishingChat)return;// Hindre flere trykk\nsetIsFinishingChat(true);// L√•s knappen\ntry{if(consent===false){console.log(\"üö´ Bruker har ikke samtykket. Samtalen slettes.\");await axios.delete(\"http://localhost:5001/saveData/delete/\".concat(chatId));console.log(\"üö´ Samtale slettet siden brukeren ikke ga samtykke.\");}else{const response=await axios.post(\"http://localhost:5001/saveData/finish\",{chatId});console.log(response.data.message,\"Fil lagret p√•:\",response.data.filePath);}}catch(error){console.error(\"‚ùå Feil ved sletting/lagring av samtale:\",error);}setMessages(prevMessages=>[...prevMessages,{sender:\"bot\",text:\"Takk for samtalen!üòä Ha en fin dag videre!\"}]);setChatEnded(true);// S√∏rg for at knappen vises\n};// Slett samtalen dersom brukeren ikke samtykket\nconst[isFinishingChat,setIsFinishingChat]=useState(false);// For √• hindre dobbelklikk\n// Start en ny samtale fra bunnen av\nconst restartChat=async()=>{setChatId(null);setConsent(null);setChatEnded(false);// Tillat meldinger igjen\nsetIsFinishingChat(false);// üîÑ Reset finishChat-knappen\nsetMessages([{sender:\"bot\",text:initialMessage}]);startNewChat();// Start en ny samtale med ny ID\n};// Autoscroll\nconst scrollToBottom=()=>{if(messagesEndRef.current){messagesEndRef.current.scrollIntoView({behavior:\"smooth\"});}};// Juster inputfeltets h√∏yde\nconst handleInputChange=e=>{setInput(e.target.value);e.target.style.height=\"30px\";e.target.style.height=\"\".concat(e.target.scrollHeight,\"px\");};// Kopier chat-ID til utklippstavlen\nconst copyChatId=()=>{navigator.clipboard.writeText(chatId).then(()=>{setHoverText(\"ID kopiert!\");setTimeout(()=>setHoverText(\"Klikk for √• kopiere ID\"),2000);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"chat-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"MeyerHaugen\",className:\"logo\"}),/*#__PURE__*/_jsx(\"p\",{className:\"chat-date\",children:new Date().toLocaleDateString(\"no-NO\",{weekday:\"long\",day:\"numeric\",month:\"long\"})}),chatId&&/*#__PURE__*/_jsxs(\"p\",{className:\"chat-id\",onClick:copyChatId,title:hoverText,style:{cursor:\"pointer\"},children:[\"Chat ID: \",/*#__PURE__*/_jsx(\"span\",{style:{textDecoration:\"underline\"},children:chatId})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-messages\",children:[messages.map((msg,i)=>/*#__PURE__*/_jsxs(\"div\",{className:\"chat-message \".concat(msg.sender),children:[msg.sender===\"bot\"?i===messages.length-1?/*#__PURE__*/_jsx(\"img\",{src:miniLogo,alt:\"Bot\",className:\"bot-avatar\"}):/*#__PURE__*/_jsx(\"div\",{className:\"bot-avatar-placeholder\"}):null,/*#__PURE__*/_jsx(\"div\",{className:\"chat-bubble \".concat(msg.sender),children:msg.text})]},i)),isTyping&&/*#__PURE__*/_jsxs(\"div\",{className:\"typing-bubble\",children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),chatEnded&&/*#__PURE__*/_jsx(\"div\",{className:\"restart-chat\",children:/*#__PURE__*/_jsx(\"button\",{className:\"restart-button\",onClick:restartChat,children:\"Start ny samtale\"})}),consent===null&&/*#__PURE__*/_jsxs(\"div\",{className:\"consent-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"accept\",onClick:()=>handleConsent(true),children:\"Godta\"}),/*#__PURE__*/_jsx(\"button\",{className:\"decline\",onClick:()=>handleConsent(false),children:\"Avsl\\xE5\"})]}),consent!==null&&/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input\",children:[/*#__PURE__*/_jsx(\"textarea\",{ref:inputRef,placeholder:\"Skriv melding her\",value:input,onChange:handleInputChange,onKeyDown:e=>{if(e.key===\"Enter\"&&!e.shiftKey){e.preventDefault();if(!chatEnded)sendMessage();// Kun send hvis chat ikke er avsluttet\n}},disabled:loading||chatEnded// Deaktivert hvis chat er avsluttet\n,rows:1,style:{resize:\"none\",minHeight:\"30px\",maxHeight:\"200px\",overflowY:\"auto\"}}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,disabled:loading||chatEnded,children:\"\\u27A4\"}),/*#__PURE__*/_jsx(\"button\",{onClick:finishChat,title:hoverXbottom,disabled:isFinishingChat// Deaktiver knappen etter f√∏rste trykk\n,children:/*#__PURE__*/_jsx(IoClose,{})})]})]});};/** \n * Bygg et array i GPT-format: {role: \"assistant\"|\"user\", content: \"...\"}\n * Basert p√• {sender: \"bot\"|\"user\", text: \"...\"} \n */function buildConversationForGPT(allMessages){return allMessages.map(m=>({role:m.sender===\"bot\"?\"assistant\":\"user\",content:m.text}));}/**\n * Teller hvor mange meldinger \"bot\" har kommet med i gjeldende fase.\n * Du kan velge √• differensiere p√• om meldingen ble postet i currentPhase. Men i en enkel variant:\n */function countAssistantMessages(allMessages,currentPhase){let count=0;for(const msg of allMessages){if(msg.sender===\"bot\"){count++;}}return count;}export default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","initialMessage","phaseOnePrompt","phaseTwoPrompt","askChatbot","logo","miniLogo","IoClose","jsx","_jsx","jsxs","_jsxs","Chatbot","messages","setMessages","sender","text","consent","setConsent","input","setInput","loading","setLoading","isTyping","setIsTyping","chatId","setChatId","hoverText","setHoverText","hoverXbottom","setHoverXbottom","phase","setPhase","messagesEndRef","inputRef","clearData","startNewChat","response","post","data","console","log","error","scrollToBottom","current","focus","handleConsent","userConsent","userMsg","botMsg","newMessages","saveMessage","sendMessage","trim","userMessage","prev","style","height","setTimeout","botReply","conversationMessages","buildConversationForGPT","systemPrompt","newAssistantCount","countAssistantMessages","message","chatEnded","setChatEnded","finishChat","isFinishingChat","setIsFinishingChat","delete","concat","filePath","prevMessages","restartChat","scrollIntoView","behavior","handleInputChange","e","target","value","scrollHeight","copyChatId","navigator","clipboard","writeText","then","className","children","src","alt","Date","toLocaleDateString","weekday","day","month","onClick","title","cursor","textDecoration","map","msg","i","length","ref","placeholder","onChange","onKeyDown","key","shiftKey","preventDefault","disabled","rows","resize","minHeight","maxHeight","overflowY","allMessages","m","role","content","currentPhase","count"],"sources":["/Users/stianjohanpettersen/Library/CloudStorage/OneDrive-OsloMet/Dataingeni√∏r - bachelor/3.aÃäret/Bachelor/Bacheloroppgave/chatbot/src/components/Chatbot.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport {\n  initialMessage,\n  phaseOnePrompt,\n  phaseTwoPrompt,\n} from \"../data/chatbotPrompts\";\nimport \"../styles/Chatbot.css\";\nimport { askChatbot } from \"../utils/langchainChatbot\";\nimport logo from \"../media/logo.png\";\nimport miniLogo from \"../media/MH_logo.png\";\nimport { IoClose } from \"react-icons/io5\";\n\n/*\n  Chatbot.jsx:\n  - Fase = 1 => GPT bruker phaseOnePrompt (5-8 sp√∏rsm√•l).\n  - Fase = 2 => GPT bruker phaseTwoPrompt (7 sp√∏rsm√•l + oppsummering).\n*/\n\nconst Chatbot = () => {\n  // Meldingshistorikk\n  const [messages, setMessages] = useState([\n    { sender: \"bot\", text: initialMessage },\n  ]);\n\n  // Samtykke (hvis du fremdeles vil bruke det)\n  const [consent, setConsent] = useState(null);\n\n  // Brukerens input + states\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [chatId, setChatId] = useState(null); // ID for samtalen\n  const [hoverText, setHoverText] = useState(\"Klikk for √• kopiere ID\");\n  const [hoverXbottom, setHoverXbottom] = useState(\"Klikk for √• avslutte samtalen\");\n\n  // Fase-styring: 1 = kort kartlegging, 2 = dyp motivasjon\n  const [phase, setPhase] = useState(1);\n\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    clearData(); // T√∏m userData.json n√•r siden lastes inn\n    startNewChat(); // Start en ny samtale n√•r chatboten lastes inn\n  }, []);\n\n  // Start en ny samtale og hent en ID\n  const startNewChat = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5001/saveData/start\");\n      setChatId(response.data.chatId);\n      console.log(\"Ny samtale startet med ID:\", response.data.chatId);\n    } catch (error) {\n      console.error(\"‚ùå Feil ved oppstart av chat:\", error);\n    }\n  };\n\n  // Autoscroll / autofokus\n  useEffect(() => {\n    scrollToBottom();\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [messages]);\n\n  // T√∏m userData.json\n  const clearData = async () => {\n    try {\n      await axios.post(\"http://localhost:5001/api/clearData\");\n      console.log(\"userData.json t√∏mt\");\n    } catch (error) {\n      console.error(\"‚ùå Feil ved t√∏mming av userData.json:\", error);\n    }\n  };\n\n  // Samtykke-h√•ndtering\n  const handleConsent = (userConsent) => {\n    setConsent(userConsent);\n    const userMsg = { sender: \"user\", text: userConsent ? \"Ja, jeg samtykker.\" : \"Nei, jeg √∏nsker ikke lagring.\" };\n    const botMsg = { sender: \"bot\", text: \"Tusen takk! Mitt navn er SoftAI, hva heter du?\" };\n\n    const newMessages = [...messages, userMsg, botMsg];\n    setMessages(newMessages);\n\n    if (userConsent) {\n      saveMessage(userMsg);\n      saveMessage(botMsg);\n    }\n  };\n\n  // Send melding\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    setLoading(true);\n\n    // Legg til brukermelding\n    const userMessage = { sender: \"user\", text: input.trim() };\n    setMessages((prev) => [...prev, userMessage]);\n    saveMessage(userMessage);\n    setInput(\"\");\n    inputRef.current.style.height = \"30px\";\n\n    setIsTyping(true);\n\n    // Vent litt og kall GPT\n    setTimeout(async () => {\n      let botReply = \"\";\n\n      // 1) Bygg hele konversasjonen i GPT-format\n      const conversationMessages = buildConversationForGPT([...messages, userMessage]);\n\n      // 2) Velg prompt basert p√• fase\n      let systemPrompt = phaseOnePrompt;\n      if (phase === 2) {\n        systemPrompt = phaseTwoPrompt;\n      }\n\n      // 3) Kall GPT\n      botReply = await askChatbot(conversationMessages, systemPrompt);\n\n      // 4) TELL antall assistent-svar i denne fasen\n      const newAssistantCount = countAssistantMessages([...messages, { sender: \"bot\", text: botReply }], phase);\n\n      // 5) Bytt til fase 2 hvis vi er i fase 1 og GPT har passert ~5‚Äì8 meldinger\n      if (phase === 1 && newAssistantCount >= 8) {\n        console.log(\"Bytter til fase 2...\");\n        // Sett fase til 2\n        setPhase(2);\n      }\n\n      // 6) Oppdater meldinger med GPT-svar\n      setMessages((prev) => [...prev, { sender: \"bot\", text: botReply }]);\n      saveMessage({ sender: \"bot\", text: botReply });\n\n      setIsTyping(false);\n      setLoading(false);\n    }, 500);\n  };\n\n  // Ensure phase 2 is activated properly\nuseEffect(() => {\n  if (phase === 2) {\n    console.log(\" Fase 2 er aktivert! Bytter til dyp motivasjonsanalyse.\");\n  }\n}, [phase]);\n\n  // Lagre en melding til backend\n  const saveMessage = async (message) => {\n    try {\n      await axios.post(\"http://localhost:5001/saveData/save\", {\n        chatId,\n        sender: message.sender,\n        text: message.text,\n      });\n    } catch (error) {\n      console.error(\"‚ùå Feil ved lagring av melding:\", error);\n    }\n  };\n\n  const [chatEnded, setChatEnded] = useState(false);\n\n  // Avslutt samtale og lagre den\n  const finishChat = async () => {\n    if (isFinishingChat) return; // Hindre flere trykk\n    setIsFinishingChat(true); // L√•s knappen\n\n    try {\n        if (consent === false) {\n            console.log(\"üö´ Bruker har ikke samtykket. Samtalen slettes.\");\n            await axios.delete(`http://localhost:5001/saveData/delete/${chatId}`);\n            console.log(\"üö´ Samtale slettet siden brukeren ikke ga samtykke.\");\n        } else {\n              const response = await axios.post(\"http://localhost:5001/saveData/finish\", { chatId });\n              console.log(response.data.message, \"Fil lagret p√•:\", response.data.filePath);\n        }\n    } catch (error) {\n          console.error(\"‚ùå Feil ved sletting/lagring av samtale:\", error);\n    }\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { sender: \"bot\", text: \"Takk for samtalen!üòä Ha en fin dag videre!\" }\n    ]);\n    setChatEnded(true); // S√∏rg for at knappen vises\n  };\n  // Slett samtalen dersom brukeren ikke samtykket\n  \n  const [isFinishingChat, setIsFinishingChat] = useState(false); // For √• hindre dobbelklikk\n\n  // Start en ny samtale fra bunnen av\n  const restartChat = async () => {\n    setChatId(null);\n    setConsent(null);\n    setChatEnded(false); // Tillat meldinger igjen\n    setIsFinishingChat(false); // üîÑ Reset finishChat-knappen\n    setMessages([{ sender: \"bot\", text: initialMessage }]);\n    startNewChat(); // Start en ny samtale med ny ID\n  };\n\n  // Autoscroll\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  // Juster inputfeltets h√∏yde\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n    e.target.style.height = \"30px\";\n    e.target.style.height = `${e.target.scrollHeight}px`;\n  };\n\n  // Kopier chat-ID til utklippstavlen\n  const copyChatId = () => {\n    navigator.clipboard.writeText(chatId).then(() => {\n      setHoverText(\"ID kopiert!\");\n      setTimeout(() => setHoverText(\"Klikk for √• kopiere ID\"), 2000);\n    });\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <header className=\"chat-header\">\n        <img src={logo} alt=\"MeyerHaugen\" className=\"logo\" />\n        <p className=\"chat-date\">\n          {new Date().toLocaleDateString(\"no-NO\", { weekday: \"long\", day: \"numeric\", month: \"long\" })}\n        </p>\n        {chatId && (\n          <p\n            className=\"chat-id\"\n            onClick={copyChatId}\n            title={hoverText}\n            style={{ cursor: \"pointer\" }}\n          >\n            Chat ID: <span style={{textDecoration: \"underline\" }}>{chatId}</span> \n          </p>\n        )}\n      </header>\n\n      <div className=\"chatbot-messages\">\n        {messages.map((msg, i) => (\n          <div key={i} className={`chat-message ${msg.sender}`}>\n            {msg.sender === \"bot\" ? (\n              i === messages.length - 1 ? (\n                <img src={miniLogo} alt=\"Bot\" className=\"bot-avatar\" />\n              ) : (\n                <div className=\"bot-avatar-placeholder\"></div>\n              )\n            ) : null}\n            <div className={`chat-bubble ${msg.sender}`}>{msg.text}</div>\n          </div>\n        ))}\n\n        {isTyping && (\n          <div className=\"typing-bubble\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        )}\n\n        <div ref={messagesEndRef} />\n      </div>\n\n      {chatEnded && (\n        <div className=\"restart-chat\">\n          <button className=\"restart-button\" onClick={restartChat}>\n                Start ny samtale\n          </button>\n        </div>\n      )}\n\n      {consent === null && (\n        <div className=\"consent-buttons\">\n          <button className=\"accept\" onClick={() => handleConsent(true)}>Godta</button>\n          <button className=\"decline\" onClick={() => handleConsent(false)}>Avsl√•</button>\n        </div>\n      )}\n\n      {consent !== null && (\n          <div className=\"chat-input\">\n              <textarea\n                  ref={inputRef}\n                  placeholder=\"Skriv melding her\"\n                  value={input}\n                  onChange={handleInputChange}\n                  onKeyDown={(e) => {\n                      if (e.key === \"Enter\" && !e.shiftKey) {\n                          e.preventDefault();\n                          if (!chatEnded) sendMessage(); // Kun send hvis chat ikke er avsluttet\n                      }\n                  }}\n                  disabled={loading || chatEnded} // Deaktivert hvis chat er avsluttet\n                  rows={1}\n                  style={{ resize: \"none\", minHeight: \"30px\", maxHeight: \"200px\", overflowY: \"auto\" }}\n              />\n              <button onClick={sendMessage} disabled={loading || chatEnded}>\n                  ‚û§\n              </button>\n              <button \n                  onClick={finishChat} \n                  title={hoverXbottom}\n                  disabled={isFinishingChat} // Deaktiver knappen etter f√∏rste trykk\n                  >                         \n                  <IoClose />\n              </button>\n          </div>\n      )}\n    </div>\n  );\n};\n\n/** \n * Bygg et array i GPT-format: {role: \"assistant\"|\"user\", content: \"...\"}\n * Basert p√• {sender: \"bot\"|\"user\", text: \"...\"} \n */\nfunction buildConversationForGPT(allMessages) {\n  return allMessages.map((m) => ({\n    role: m.sender === \"bot\" ? \"assistant\" : \"user\",\n    content: m.text,\n  }));\n}\n\n/**\n * Teller hvor mange meldinger \"bot\" har kommet med i gjeldende fase.\n * Du kan velge √• differensiere p√• om meldingen ble postet i currentPhase. Men i en enkel variant:\n */\nfunction countAssistantMessages(allMessages, currentPhase) {\n  let count = 0;\n  for (const msg of allMessages) {\n    if (msg.sender === \"bot\") {\n      count++;\n    }\n  }\n  return count;\n}\n\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}